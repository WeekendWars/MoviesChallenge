apply plugin: 'com.android.application'
apply plugin: 'com.monits.staticCodeAnalysis'

android {
    signingConfigs {
        Release {
            keyAlias 'challenge'
            keyPassword 'challenge'
            storeFile file('../keystore/KeyStore')
            storePassword 'challenge'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.weekendwars.movieschallenge"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.Release
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

/**
 * Static code analysis configuration for running checks
 */
staticCodeAnalysis {
    findbugs = true
    checkstyle = true
    pmd = true
    cpd = true
    androidLint = true
    ignoreErrors = false
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"

    /*
        This is a library of my own which sets up a simple MVP architecture
        Resources: https://github.com/WeekendWars/mvp-core
      */
    implementation('com.github.weekendwars:core-mvp:1.0.1')

    // Test dependencies
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
}
